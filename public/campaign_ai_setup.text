Phase 1: Hybrid Lead Generation Plan
This document outlines the initial phase of your lead generation strategy. The focus is on a "human-in-the-loop" model, where manual effort is combined with AI automation to produce high-quality, personalized emails. This approach is designed to be highly effective for a small team, ensuring quality control while still leveraging the power of AI to save time and effort.

I. Campaign Creation & Setup
To give the AI the context it needs, a campaign record must be created with the following key information. This data will be used by the Gemini API to understand the goal and tone of each message.

Campaign Name: A descriptive name for internal use (e.g., "Social Media for Perth Restaurants Q3").

Target Audience: A detailed description of the ideal client (e.g., "Small, family-owned restaurants in the Perth CBD with an existing website.").

Services Offered: A list of the specific services being promoted in this campaign (e.g., "Social Media Marketing," "Facebook Ads," "Google Ads").

Campaign Goal: The desired outcome of the campaign (e.g., "Book a discovery call," "Increase website traffic").

AI Persona: The tone and style the AI should use when drafting emails (e.g., "Friendly and professional," "Direct and benefit-oriented").

Email Template: A base template or "seed text" that the AI will personalize for each lead.

Status: A toggle to set the campaign as "Active" or "Inactive" to control automation.

II. CRM Pipeline Flow
This plan uses a simplified version of the CRM pipeline, focused on the human-AI interaction.

Stage Name

Description

Role

1. Manual Lead Entry

Leads are manually found and entered into the CRM.

User: Finds the lead (name, company, email, etc.) and creates the record.

2. AI Content Generation

The lead record is sent to the AI for email content creation.

System: A scheduled Laravel job runs periodically, creating queued jobs for each new lead in an active campaign. These jobs send a request to the Gemini API.

3. Outreach Sent

The AI has provided the personalized email draft, and it has been sent.

System: A scheduled task sends the email to the lead. The CRM tracks opens/replies.

4. Follow-up Scheduled

A follow-up email is scheduled based on the AI's suggestion.

AI: Provides a suggested follow-up date and can even draft a meeting invitation with a calendar link. System: The CRM schedules a task for that date and/or sends the calendar link.

5. Qualified

The lead has replied and been qualified.

User: Manually moves the lead to this stage and takes over the conversation. The AI can assist with meeting preparation by summarizing the email thread.

III. The Automated Process
This is a step-by-step breakdown of how the User will use AI with manual leads.

1. Lead Discovery

The User finds a potential lead on a platform like Airtasker or Upwork.

The User manually creates a new lead record in the Laravel CRM, populating the basic fields such as business name, contact person, website, and email address.

2. AI Content & Schedule Generation

A scheduled Laravel job runs every day, checking for new leads in active campaigns.

For each new lead, it dispatches a queued job that sends a request to the Gemini API with all the lead's information and the context from the campaign.

The API's response includes a highly personalized email draft, a suggested next follow-up date, and a pre-formatted call-to-action (e.g., a Google Calendar link).

3. Automated Outreach

The Laravel application's queue worker automatically sends the AI-generated email draft to the lead, using the next_follow_up_date to know when to act.

The User's role is to monitor the campaign status and performance from the dashboard, not to approve every email.

4. Automated Follow-up & Reply Handling

The CRM schedules a task based on the AI-suggested follow-up date.

When a client replies, the CRM sends a summary of the email thread to the AI for analysis. The AI then suggests a response and provides a new next_follow_up_date.

5. Human-AI Handoff

Once a lead is qualified, the User takes over the conversation.

The AI can provide a quick summary of the entire email thread to help prepare for the meeting.

IV. Leads Table Fields (CRM Database)
The following fields should be added to the existing leads database table. These are essential for providing the AI with the necessary context and for the Laravel application to manage the campaign workflow.

campaign_id (Integer, Foreign Key): This is a critical field that links the lead to a specific campaign. The AI uses this to understand the campaign's Target Audience, Services Offered, and AI Persona.

status (String): This tracks where the lead is in the pipeline (e.g., 'new', 'outreach_sent', 'replied', 'qualified'). The Laravel app uses this to know when to trigger the next action.

next_follow_up_date (Timestamp): This field stores the optimal follow-up date suggested by the AI. The Laravel scheduler uses this date to trigger the next automated email.

email_thread_history (JSON or Text): This stores the concise, AI-generated context of communication with the lead. The Laravel application will send this summary to the AI to maintain conversation history without sending the full email content each time.
